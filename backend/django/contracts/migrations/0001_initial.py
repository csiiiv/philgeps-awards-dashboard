# Generated by Django 5.2.6 on 2025-09-09 08:54

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaOfDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Area of Delivery',
                'verbose_name_plural': 'Areas of Delivery',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Category',
                'verbose_name_plural': 'Business Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contractor',
                'verbose_name_plural': 'Contractors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DataImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('import_type', models.CharField(choices=[('xlsx', 'Excel File'), ('parquet', 'Parquet File'), ('csv', 'CSV File')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('processed_records', models.PositiveIntegerField(default=0)),
                ('failed_records', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_imports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Import',
                'verbose_name_plural': 'Data Imports',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('notice_title', models.TextField()),
                ('award_title', models.TextField(blank=True, null=True)),
                ('publish_date', models.DateField(blank=True, null=True)),
                ('award_date', models.DateField(blank=True, null=True)),
                ('award_publish_date', models.DateField(blank=True, null=True)),
                ('notice_to_proceed_date', models.DateField(blank=True, null=True)),
                ('contract_effectivity_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('prebid_date', models.DateTimeField(blank=True, null=True)),
                ('closing_date', models.DateTimeField(blank=True, null=True)),
                ('classification', models.CharField(blank=True, max_length=100, null=True)),
                ('notice_type', models.CharField(blank=True, max_length=100, null=True)),
                ('award_type', models.CharField(blank=True, max_length=100, null=True)),
                ('total_contract_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('average_line_item_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('min_line_item_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('max_line_item_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('line_item_count', models.PositiveIntegerField(blank=True, null=True)),
                ('total_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('notice_status', models.CharField(blank=True, max_length=100, null=True)),
                ('award_status', models.CharField(blank=True, max_length=100, null=True)),
                ('award_no', models.CharField(blank=True, max_length=100, null=True)),
                ('contract_no', models.CharField(blank=True, max_length=100, null=True)),
                ('funding_source', models.CharField(blank=True, max_length=200, null=True)),
                ('funding_instrument', models.CharField(blank=True, max_length=200, null=True)),
                ('procurement_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('trade_agreement', models.CharField(blank=True, max_length=100, null=True)),
                ('contract_duration', models.CharField(blank=True, max_length=100, null=True)),
                ('calendar_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reason_for_award', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area_of_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='contracts.areaofdelivery')),
                ('business_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='contracts.businesscategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contracts', to=settings.AUTH_USER_MODEL)),
                ('contractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='contracts.contractor')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='contracts.organization')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
                'ordering': ['-award_date', '-total_contract_amount'],
                'indexes': [models.Index(fields=['award_date'], name='contracts_c_award_d_f240f9_idx'), models.Index(fields=['total_contract_amount'], name='contracts_c_total_c_e2d7f9_idx'), models.Index(fields=['organization', 'award_date'], name='contracts_c_organiz_3c0fb1_idx'), models.Index(fields=['contractor', 'award_date'], name='contracts_c_contrac_8111e5_idx'), models.Index(fields=['business_category', 'award_date'], name='contracts_c_busines_55b6ad_idx')],
            },
        ),
    ]
