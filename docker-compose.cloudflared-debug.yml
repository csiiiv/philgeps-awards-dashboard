services:
  backend:
    build:
      context: ./backend/django
      dockerfile: Dockerfile
    image: philgeps-backend:latest
    container_name: philgeps-backend-debug
    ports:
      - "3200:8000"
    networks:
      - philgeps-debug
    environment:
      SECRET_KEY: "your-secret-key"
      DEBUG: "True"  # Enable Django debug mode for detailed error pages
      ALLOWED_HOSTS: "localhost,127.0.0.1,philgeps-api.simple-systems.dev,philgeps.simple-systems.dev"
      CORS_ALLOWED_ORIGINS: "https://philgeps.simple-systems.dev"
      CSRF_TRUSTED_ORIGINS: "https://philgeps.simple-systems.dev"
      PARQUET_DIR: "/data/parquet"
      GUNICORN_TIMEOUT: "300"
      GUNICORN_GRACEFUL_TIMEOUT: "330"
      GUNICORN_KEEPALIVE: "5"
      # Gunicorn logging - verbose output for troubleshooting
      GUNICORN_LOG_LEVEL: "debug"  # Options: debug, info, warning, error, critical
      GUNICORN_ACCESS_LOG: "-"  # Log to stdout
      GUNICORN_ERROR_LOG: "-"   # Log to stderr
      # Django logging
      DJANGO_LOG_LEVEL: "DEBUG"  # Show all SQL queries, cache hits, etc.
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    # Uncomment to use external data directory instead of baked-in data
    volumes:
      - ./backend/django/static_data:/data/parquet:ro

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: https://philgeps-api.simple-systems.dev
    image: philgeps-frontend:latest
    container_name: philgeps-frontend-debug
    ports:
      - "3000:80"
    networks:
      - philgeps-debug
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      backend:
        condition: service_healthy
      
  # Optional: Use this if you want to run cloudflared in Docker instead of as a background service
  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   restart: unless-stopped
  #   command: tunnel --no-autoupdate run
  #   environment:
  #     TUNNEL_TOKEN: "<your-cloudflare-tunnel-token>"
  #   depends_on:
  #     - backend
  #     - frontend
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

networks:
  philgeps-debug:
    driver: bridge
    name: philgeps-debug-network
